<template>
  <view class="page topic__detail_page">
    <image class="topic__detail_poster" mode="aspectFill" src="{{topic.poster}}?imageView2/1/w/375/h/188" />
    <view class="topic__detail_preview">
      <view class="topic__detail_title">
        {{topic.title}}
      </view>
      <view class="topic__detail_data">
        <view class="topic__detail_val">
          {{topic.people_cnt}}人参与
        </view>
        <view class="topic__detail_split">
          |
        </view>
        <view class="topic__detail_val">
          {{topic.topic_cnt}}条动态
        </view>
      </view>
      <view class="topic__detail_btns">
        <view class="topic__detail_btn topic__detail_follow" @tap="follower">
          {{topic.following ? '取消关注' : '关注话题'}}
        </view>
        <button open-type="share" hover-class="none" class="topic__detail_btn topic__detail_share">
          邀请好友
        </button>
      </view>
    </view>
    <view class="detail__body">
      <repeat for="{{posts}}" key="index" index="index" item="post">
        <posts :post.sync="post" :index.sync="index" />
      </repeat>
    </view>
    <view wx:if="{{isUp}}" class="topic__detail_join" style="bottom: {{model === 'iPhone X' ? 60 : 0}}rpx;">
      <navigator url="/pages/up-image?subject_id={{id}}&title={{topic.title}}" class="topic__detail_i">
        <image class="topic__detail_i-icon" src="/assets/image/icon-img.png" />
        <view class="topic__detail_i-name">发布图文</view>
      </navigator>
      <!-- <view class="topic__detail_i-split">
      </view>
      <navigator url="/pages/voice?subject_id={{id}}&title={{topic.title}}" class="topic__detail_i">
        <image class="topic__detail_i-icon" src="/assets/image/icon-voice.png" />
        <view class="topic__detail_i-name">上传语音</view>
      </navigator> -->
    </view>
    <share />
    <login-modal />
    <error-modal />
  </view>
</template>

<script>
import wepy from 'wepy'

import Posts from '@/components/topic/posts'
import Share from '@/components/common/share'

import welcome from '@/mixins/welcome'
import error from '@/mixins/error'

import { format, int2unit } from '@/utils/unit'

import Config from '@/config/index'
import { http } from '@/utils/request'

import UserGuide from '@/components/common/new-guide'
import ErrorToast from '@/components/common/toast'

export default class TopicDetail extends wepy.page {
  config = {
    navigationBarTitleText: '话题详情',
    enablePullDownRefresh: true
  }

  onShareAppMessage() {
    return {
      title: this.topic.title,
      path: `/pages/topic-detail?id=${this.id}`,
      imageUrl: `${this.topic.share}?imageView2/1/w/500/h/400`
    }
  }

  components = {
    'posts': Posts,
    'share': Share,
    'login-modal': UserGuide,
    'error-modal': ErrorToast
  }

  mixins = [welcome, error]

  events = {
    'share-event'() {
      this.share()
    },
    'like-event'(index, like) {
      this.posts[index].like = like
      if (like) {
        this.posts[index].like_cnt ++
      } else {
        this.posts[index].like_cnt --
      }
      this.$apply()
    }
  }

  share() {
    this.$invoke('share', 'show')
  }

  methods = {
    invite() {
      this.share()
    },
    follower() {
      const following = this.topic.following ? 0 : 1
      this.topic.following = following
      this.$apply()
    }
  }

  data = {
    topic: {},
    posts: [],
    id: 0,
    following: undefined,
    isHasNext: true,
    next: 0,
    model: '',
    isUp: false
  }

  async onPullDownRefresh() {
    this.next = 0
    this.following = undefined
    try {
      await this.ready()
    } catch (error) {
    } finally {
      wepy.stopPullDownRefresh()
    }
  }

  async onReachBottom() {
    if (this.isHasNext) {
      await this.nextPage()
    }
  }

  async ready() {
    // 请求接口
    const responseWrap = await http({
      url: `${Config.api.subject.subject.url}?subject_id=${this.id}`,
      method: Config.api.subject.subject.method
    })
    if (responseWrap.status === '200') {
      this.topic = responseWrap.data || {}
      this.topic.people_cnt = int2unit(this.topic.people_cnt)
      this.topic.topic_cnt = int2unit(this.topic.topic_cnt)
      this.isUp = this.topic.is_up
      this.following = this.topic.following
      this.$apply()
    }
    const list = await this.getList()
    this.posts = list
    this.$apply()
  }

  async getList() {
    const responseWrap = await http({
      url: `${Config.api.subject.topic.url}?subject_id=${this.id}&page=${this.next}`,
      method: Config.api.subject.topic.method
    })
    let list = []
    if (responseWrap.status === '200') {
      list = responseWrap.data.list
      list.forEach((item, index) => {
        list[index]['create_time'] = format(item['create_time'])
        if (list[index]['voice']) {
          list[index]['voice'] = decodeURIComponent(item['voice'])
        }
      })
      if (list.length === 10) {
        this.isHasNext = true
      } else {
        this.isHasNext = false
      }
    }

    return list || []
  }

  async nextPage() {
    this.next ++
    const list = await this.getList()
    this.posts = [].concat(this.posts).concat(list)
    this.$apply()
  }

  onLoad(options) {
    this.id = options.id
    const sys = wepy.getSystemInfoSync()
    this.model = sys.model
  }

  onUnload() {
    if (this.following !== this.topic.following) {
      // 变化
      http({
        url: Config.api.subject.follower.url,
        method: Config.api.subject.follower.method,
        data: { subject_id: this.topic.id, following: String(this.topic.following) }
      })
    }
  }
}
</script>
